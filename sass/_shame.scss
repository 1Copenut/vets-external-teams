// This file is a place where you put all the code you're not proud of,
// with the intention of A) isolating it and B) fixing it later. The goal
// is for this file to be empty, but some times you just have to throw that
// hack in there to get it working.

// message while loading react app

.usa-bitter, .va-introtext p, h1, h2, h3, h4, h5, h6 {
  font-family: "Bitter", "Georgia", "Cambria", "Times New Roman", "Times", serif;
}

.loading-message {
  padding: 2em 0;
  text-align: center;
}


body {
  .row {
    max-width: 62.5em;
  }
}

.form-panel {
  @include media($medium-screen) {
    max-width: $usa-form-width;
  }
}

.main-form,
.progress-box {
  button {
    width: 100%;
  }
}

.button-icon {
  font-size: 1.7rem;
}

.progress-box {
  border: 1px solid $color-gray-lightest;
  margin: 1.5rem 0;
  padding: 1rem 2rem;
}

.form-section {
  display: none;
}

#content .section {
  fieldset {
    h4 {
      padding: 0;
    }
  }
}

.edit-checkbox {
  label {
    background-color: transparent;
    display: inline-block;

    &::before {
      display: none !important;
    }

    &:hover {
      cursor: pointer;
      outline: 0;
    }
  }
}

.input-section {
  margin-bottom: 2em;

  .row {
    margin: 0;
  }
}

.usa-input-error {
  select {
    border: 3px solid $color-secondary-dark;
    width: calc(100% + 1.5rem);
  }
}

.hidden {
  display: none !important;
}

// inline declarations moved here as a result of CSP rules

.csp-inline-patch-footer {
  display: none;
  visibility: hidden;
}

.csp-inline-patch-header {
  display: inline;
  margin: 0;
  padding: 0;
}

.csp-inline-patch-modal {
  display: none;
}

.csp-inline-patch-page-breadcrumbs {
  background-color: $color-warning-message;
  text-align: center;
}

.csp-inline-patch-page-breadcrumbs-2 {
  margin: 0;
}

.csp-inline-patch-page-react {
  padding: 2em 0;
}

.csp-inline-patch-404 {
  display: inline;
  margin: 0;
  padding: 0;
}

.csp-inline-patch-application {
  padding: 2em 0;
}

.csp-inline-patch-logout {
  padding: 2em 0;
}

// /education/apply/ uses this expander button for navigation
// Where else can I put this? Also, it could use a better name.
.expander-button {
  &::after {
    background-image: url("/img/arrow-down-white.svg");
    background-position: right bottom;
    background-repeat: no-repeat;
    background-size: .6em auto;
    content: ""; // Add content for accessibility purposes?
    display: inline-block;
    height: 1em;
    margin-left: .5em;
    margin-right: -.3em;
    text-indent: -9999em;
    width: 1em;
  }
}

// Handles the height transition
.expander-content {
  // No max height for small screens = no animation, which is fine
  // Also means the Apply Now button doesn't get cut off
  @include media($small-screen) {
    max-height: 25em;
  }
  overflow: hidden;
  transition: max-height 150ms ease-in-out;

  // Handles the opacity transition
  .expander-content-inner {
    transition: opacity 150ms ease-in-out;

    a.usa-button-primary {
      transition: opacity 150ms ease-in-out;
      transition-delay: 150ms;
    }
  }

  // Apply this to the inner content and make a new div
  //  with the border to expand that without the opacity
  &.expander-content-closed {
    max-height: 0 !important; // To override the id selector height
    visibility: hidden;

    .expander-content-inner {
      opacity: 0;

      a.usa-button-primary {
        opacity: 0;
      }
    }
  }
}

//============================================
// Overrides for USWDS shenanigans.
// See: https://github.com/18F/web-design-standards/issues/1899
// ===========================================

@include media($medium-large-screen)  {
  .usa-grid {
    .usa-width-one-fourth {
      margin-right: 2.35765%;
      width: 23.23176%;
    }

    .usa-width-three-fourths {
      width: 74.41059%;
    }
  }
}

// USWDS override so that checkboxes aren't offscreen
// At some point between 0.10 and 1.4, USWDS modified radio/checkbox style
// so be position: absolute, and left: -999em. This isn't compatible with our
// e2e test cases, because Nightwatch can't find the elements on screen.
input[type="checkbox"], input[type="radio"] {
  margin-left: -2rem;
  opacity: 0;
  position: absolute;
  left: auto;
}

// USWDS uses this:
// [hidden] { display: none !important; }
// However, some apps set the property to false and expect the element to be visible.
// So, we do this shameful override to get around it.
[hidden=false]{
  display: block !important;
}

// USWDS adds an increased margin for submit buttons, which break out grid display when we have a
// back button on the left and a submit on the right.
form {
  [type=submit] {
    @include media($medium-screen) {
      padding-left: 2rem;
      padding-right: 2rem;
      width: 100%;
    }
  }
}

// Overrides so that the left/right padding matches the Foundation grid.
// Without this, using the USA grid causes alignment issues other components
// on the page that use the Foundation grid.
.va-l-detail-page {
  > .usa-grid {
    padding-left: 0.9375rem;
    padding-right: 0.9375rem;
  }
}

// Ensure the info icon is centered in boxes with only one line of text
.usa-alert-info {
  min-height: 74px;
}

#hurricane-warning-container {

  width: 100%;
  background-color: $color-gibill-accent;

}

#hurricane-warning {

  max-width: 62.5em;
  margin: 0 auto;

  .usa-alert-body {
    margin: 0 auto;
    text-align: left;

    .usa-alert-heading {

      margin: 0 auto;
      padding: 0;
    }
  }
}

/* TO DO: move this to _fractal.scss when that file exists */
#color-palette {
  width:250px;
  height:auto;
  border:1px solid hotpink;

}

// additional variables
$color-gold-darker: #988530;

.palette-container {
  width: 100%;
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(4, 24%);
  grid-auto-flow: row;
  height: auto;
  padding-bottom:30px;

  .palette-swatch {
    border: 1px solid $color-gray-warm-light;
    padding: 10px;

    .swatch {
      display: inline-block;
      width:100%;
      height:70px;

      &.color-link-default {
        background-color: $color-link-default;
      }

      &.color-visited {
        background-color: $color-visited;
      }

      &.color-focus {
        background-color: $color-focus;
      }

      &.color-base {
        background-color: $color-base;
      }

      &.color-black {
        background-color: $color-black;
      }

      &.color-white {
        background-color: $color-white;
        border:1px solid $color-gray-warm-light;
      }

      &.color-primary {
        background-color: $color-primary;
      }

      &.color-primary-darker {
        background-color: $color-primary-darker;
      }

      &.color-primary-darkest {
        background-color: $color-primary-darkest;
      }

      &.color-primary-alt {
        background-color: $color-primary-alt;
      }

      &.color-primary-alt-lightest {
        background-color: $color-primary-alt-lightest;
      }

      &.color-primary-alt-light {
        background-color: $color-primary-alt-light;
      }

      &.color-primary-alt-dark {
        background-color: $color-primary-alt-dark;
      }

      &.color-primary-alt-darkest {
        background-color: $color-primary-alt-darkest;
      }

      &.color-secondary {
        background-color: $color-secondary;
      }

      &.color-secondary-lightest {
        background-color: $color-secondary-lightest;
      }

      &.color-secondary-light {
        background-color: $color-secondary-light;
      }

      &.color-secondary-dark {
        background-color: $color-secondary-dark;
      }

      &.color-secondary-darkest {
        background-color: $color-secondary-darkest;
      }

      &.color-gray-dark {
        background-color: $color-gray-dark;
      }

      &.color-gray-lightest {
        background-color: $color-gray-lightest;
      }

      &.color-gray-lighter {
        background-color: $color-gray-lighter;
      }

      &.color-gray-light {
        background-color: $color-gray-light;
      }

      &.color-gray-medium {
        background-color: $color-gray-medium;
      }

      &.color-gray {
        background-color: $color-gray;
      }

      &.color-gray-warm-dark {
        background-color: $color-gray-warm-dark;
      }

      &.color-gray-warm-light {
        background-color: $color-gray-warm-light;
      }

      &.color-gray-cool-light {
        background-color: $color-gray-cool-light;
      }

      &.color-gold {
        background-color: $color-gold;
      }

      &.color-gold-lightest {
        background-color: $color-gold-lightest;
      }

      &.color-gold-lighter {
        background-color: $color-gold-lighter;
      }

      &.color-gold-light {
        background-color: $color-gold-light;
      }

      &.color-gold-darker {
        background-color: $color-gold-darker;
      }

      &.color-green {
        background-color: $color-green;
      }

      &.color-green-lightest {
        background-color: $color-green-lightest;
      }

      &.color-green-lighter {
        background-color: $color-green-lighter;
      }

      &.color-green-light {
        background-color: $color-green-light;
      }

      &.color-green-darker {
        background-color: $color-green-darker;
      }

    }


  }
}
